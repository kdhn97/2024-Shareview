# Generated by Django 4.2.6 on 2024-05-22 07:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('actor_code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('actor', models.CharField(max_length=50)),
                ('profile_image', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('country', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('overview', models.TextField(max_length=300)),
                ('poster', models.TextField(null=True)),
                ('opening_date', models.DateField(null=True)),
                ('running_time', models.IntegerField(null=True)),
                ('review_score', models.FloatField()),
                ('show_status', models.IntegerField(choices=[(0, '개봉'), (1, '개봉 예정'), (2, '기타')], validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(0)])),
                ('actor', models.ManyToManyField(to='movies.actor', verbose_name='actor_movie')),
            ],
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('producer_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('producer', models.CharField(max_length=150)),
                ('profile_image', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snapshot', models.TextField(blank=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snapshots', to='movies.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MovieChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='chat_users',
            field=models.ManyToManyField(related_name='chat_movies', through='movies.MovieChat', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movie',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.country'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genre',
            field=models.ManyToManyField(to='movies.genre', verbose_name='genre_movie'),
        ),
        migrations.AddField(
            model_name='movie',
            name='like_users',
            field=models.ManyToManyField(related_name='like_movies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movie',
            name='producer',
            field=models.ManyToManyField(to='movies.producer', verbose_name='producer_movie'),
        ),
        migrations.AddField(
            model_name='movie',
            name='review_users',
            field=models.ManyToManyField(related_name='review_movies', through='movies.MovieReview', to=settings.AUTH_USER_MODEL),
        ),
    ]
